---
import { supabase } from '../lib/supabase.js';

// Funci√≥n para obtener estructura de tabla
async function getTableStructure(tableName) {
  try {
    const { data, error } = await supabase
      .from(tableName)
      .select('*')
      .limit(1);
    
    if (error) {
      return { error: error.message, columns: [] };
    }
    
    const columns = data && data.length > 0 ? Object.keys(data[0]) : [];
    return { columns, sampleData: data[0] || null };
  } catch (err) {
    return { error: err.message, columns: [] };
  }
}

// Obtener todas las estructuras
const profileStructure = await getTableStructure('profile');
const projectsStructure = await getTableStructure('projects');
const socialLinksStructure = await getTableStructure('social_links');
const siteSettingsStructure = await getTableStructure('site_settings');

// Obtener datos actuales
let actualProfile = null;
let actualProjects = [];
let actualSocialLinks = [];
let actualSettings = [];

try {
  const profileResult = await supabase.from('profile').select('*').limit(1).single();
  actualProfile = profileResult.data;
} catch (e) {}

try {
  const projectsResult = await supabase.from('projects').select('*');
  actualProjects = projectsResult.data || [];
} catch (e) {}

try {
  const socialResult = await supabase.from('social_links').select('*');
  actualSocialLinks = socialResult.data || [];
} catch (e) {}

try {
  const settingsResult = await supabase.from('site_settings').select('*');
  actualSettings = settingsResult.data || [];
} catch (e) {}
---

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Debug CMS - Estructura de Base de Datos</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 min-h-screen py-8">
  <div class="max-w-7xl mx-auto px-4">
    <h1 class="text-3xl font-bold text-center mb-8">üîç Debug CMS - Estructura de Base de Datos</h1>
    
    <!-- Profile -->
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
      <h2 class="text-2xl font-semibold mb-4 text-blue-600">üìã Tabla: profile</h2>
      
      <div class="mb-4">
        <h3 class="font-semibold text-lg mb-2">Columnas disponibles:</h3>
        {profileStructure.error ? (
          <div class="text-red-600 bg-red-50 p-3 rounded">
            ‚ùå Error: {profileStructure.error}
          </div>
        ) : (
          <div class="flex flex-wrap gap-2">
            {profileStructure.columns.map(col => (
              <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">{col}</span>
            ))}
          </div>
        )}
      </div>

      <div class="mb-4">
        <h3 class="font-semibold text-lg mb-2">Datos actuales:</h3>
        {actualProfile ? (
          <pre class="bg-gray-100 p-4 rounded text-sm overflow-x-auto">{JSON.stringify(actualProfile, null, 2)}</pre>
        ) : (
          <div class="text-yellow-600 bg-yellow-50 p-3 rounded">‚ö†Ô∏è No hay datos en la tabla profile</div>
        )}
      </div>
    </div>

    <!-- Projects -->
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
      <h2 class="text-2xl font-semibold mb-4 text-green-600">üìÇ Tabla: projects</h2>
      
      <div class="mb-4">
        <h3 class="font-semibold text-lg mb-2">Columnas disponibles:</h3>
        {projectsStructure.error ? (
          <div class="text-red-600 bg-red-50 p-3 rounded">
            ‚ùå Error: {projectsStructure.error}
          </div>
        ) : (
          <div class="flex flex-wrap gap-2">
            {projectsStructure.columns.map(col => (
              <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">{col}</span>
            ))}
          </div>
        )}
      </div>

      <div class="mb-4">
        <h3 class="font-semibold text-lg mb-2">Datos actuales ({actualProjects.length} proyectos):</h3>
        {actualProjects.length > 0 ? (
          <div class="space-y-4">
            {actualProjects.map((project, index) => (
              <div class="bg-gray-50 p-4 rounded">
                <h4 class="font-semibold mb-2">Proyecto {index + 1}:</h4>
                <pre class="text-sm overflow-x-auto">{JSON.stringify(project, null, 2)}</pre>
              </div>
            ))}
          </div>
        ) : (
          <div class="text-yellow-600 bg-yellow-50 p-3 rounded">‚ö†Ô∏è No hay proyectos en la tabla</div>
        )}
      </div>
    </div>

    <!-- Social Links -->
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
      <h2 class="text-2xl font-semibold mb-4 text-purple-600">üîó Tabla: social_links</h2>
      
      <div class="mb-4">
        <h3 class="font-semibold text-lg mb-2">Columnas disponibles:</h3>
        {socialLinksStructure.error ? (
          <div class="text-red-600 bg-red-50 p-3 rounded">
            ‚ùå Error: {socialLinksStructure.error}
          </div>
        ) : (
          <div class="flex flex-wrap gap-2">
            {socialLinksStructure.columns.map(col => (
              <span class="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm font-medium">{col}</span>
            ))}
          </div>
        )}
      </div>

      <div class="mb-4">
        <h3 class="font-semibold text-lg mb-2">Datos actuales ({actualSocialLinks.length} enlaces):</h3>
        {actualSocialLinks.length > 0 ? (
          <pre class="bg-gray-100 p-4 rounded text-sm overflow-x-auto">{JSON.stringify(actualSocialLinks, null, 2)}</pre>
        ) : (
          <div class="text-yellow-600 bg-yellow-50 p-3 rounded">‚ö†Ô∏è No hay enlaces sociales en la tabla</div>
        )}
      </div>
    </div>

    <!-- Site Settings -->
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
      <h2 class="text-2xl font-semibent mb-4 text-orange-600">‚öôÔ∏è Tabla: site_settings</h2>
      
      <div class="mb-4">
        <h3 class="font-semibold text-lg mb-2">Columnas disponibles:</h3>
        {siteSettingsStructure.error ? (
          <div class="text-red-600 bg-red-50 p-3 rounded">
            ‚ùå Error: {siteSettingsStructure.error}
          </div>
        ) : (
          <div class="flex flex-wrap gap-2">
            {siteSettingsStructure.columns.map(col => (
              <span class="bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-medium">{col}</span>
            ))}
          </div>
        )}
      </div>

      <div class="mb-4">
        <h3 class="font-semibold text-lg mb-2">Datos actuales ({actualSettings.length} configuraciones):</h3>
        {actualSettings.length > 0 ? (
          <pre class="bg-gray-100 p-4 rounded text-sm overflow-x-auto">{JSON.stringify(actualSettings, null, 2)}</pre>
        ) : (
          <div class="text-yellow-600 bg-yellow-50 p-3 rounded">‚ö†Ô∏è No hay configuraciones en la tabla</div>
        )}
      </div>
    </div>

    <div class="text-center">
      <a href="/" class="inline-flex items-center px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors">
        ‚Üê Volver al Portfolio
      </a>
    </div>
  </div>
</body>
</html>
