---
import { 
  getProfile, 
  getSiteSettings, 
  getSocialLinks,
  getAvailability 
} from '../lib/cms-api.js';

// Obtener datos din치micos del CMS
let profile: any = null;
let siteSettings: any = {};
let socialLinks: any[] = [];
let availability: any = null;

try {
  [profile, siteSettings, socialLinks, availability] = await Promise.all([
    getProfile(),
    getSiteSettings(),
    getSocialLinks(),
    getAvailability()
  ]);
} catch (error) {
  console.error('Error loading hero data:', error);
}

// Configuraci칩n desde CMS solamente
const fullName = profile?.name;
const firstName = fullName ? fullName.split(' ')[0] : '';
const heroTitle = siteSettings?.hero_title || fullName;
const heroSubtitle = siteSettings?.hero_subtitle || profile?.title;
const heroDescription = profile?.bio;
const heroLocation = profile?.location;
const heroEmail = profile?.email;
const heroPhone = profile?.phone;
const avatarUrl = profile?.avatar_url;

// Skills desde el perfil (JSONB array)
const skills = Array.isArray(profile?.skills) ? profile.skills : [];

// Estado de disponibilidad
const isAvailable = availability?.is_available || false;
const availabilityText = availability?.status_text || (isAvailable ? '游눜 Disponible para nuevos proyectos' : '游댮 No disponible actualmente');
const availabilityDetails = availability?.details;
const nextAvailableDate = availability?.next_available_date;

// CTAs din치micos basados en disponibilidad
const primaryCTA = { text: '游닎 Cont치ctame', action: 'contact' };
const secondaryCTA = { text: '游늯 Descargar CV', action: 'download-cv' };
---

<!-- Hero Section con mejor composici칩n -->
<section id="hero" class="relative min-h-[90vh] flex items-center justify-center overflow-hidden hero-gradient pt-20 pb-8">
  <!-- Animated Background Optimizado -->
  <div class="absolute inset-0">
    <div class="absolute top-10 left-10 w-64 h-64 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob"></div>
    <div class="absolute top-20 right-10 w-64 h-64 bg-gradient-to-r from-yellow-400 to-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000"></div>
    <div class="absolute -bottom-8 left-20 w-64 h-64 bg-gradient-to-r from-pink-400 to-red-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000"></div>
    <div class="absolute inset-0 grid-pattern opacity-10"></div>
  </div>

  <div class="relative z-10 container-zoom-friendly spacing-responsive-lg">
    <div class="text-center space-y-6 max-w-4xl mx-auto">
      <!-- Avatar Compacto con Animaciones -->
      {avatarUrl && (
        <div class="flex justify-center mb-6" data-animate="scaleIn">
          <div class="relative w-28 h-28 md:w-36 md:h-36 group">
            <div class="absolute inset-0 rounded-full bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 animate-spin-slow opacity-75 group-hover:opacity-100 transition-opacity"></div>
            <div class="absolute inset-1 rounded-full bg-gradient-to-r from-pink-400 via-purple-400 to-cyan-400 animate-spin-reverse opacity-50 group-hover:opacity-75 transition-opacity"></div>
            <div class="absolute inset-2 rounded-full overflow-hidden bg-white shadow-2xl group-hover:shadow-3xl transition-shadow duration-500">
              <img 
                src={avatarUrl} 
                alt={`Avatar de ${fullName}`}
                class="w-full h-full object-cover transform group-hover:scale-110 transition-transform duration-700 filter group-hover:brightness-110"
                loading="eager"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-transparent to-white/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            </div>
            {isAvailable && (
              <div class="absolute -top-1 -right-1 w-4 h-4 bg-green-400 rounded-full animate-pulse shadow-lg"></div>
            )}
          </div>
        </div>
      )}

      <!-- T칤tulo Principal Limpio -->
      <div data-animate="fadeInUp">
        <h1 class="font-bold text-white mb-4 leading-tight" style="font-size: clamp(2rem, 8vw, 4.5rem);">
          <span class="bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent animate-gradient-x">
            {heroTitle}
          </span>
        </h1>
        
        <!-- Subt칤tulo y ubicaci칩n compactos -->
        <div class="space-y-2">
          {heroSubtitle && (
            <p class="text-white/90 font-medium" style="font-size: clamp(1.125rem, 3vw, 1.5rem);">{heroSubtitle}</p>
          )}
          {heroLocation && (
            <div class="flex items-center justify-center text-white/70 hover:text-white/90 transition-colors duration-300">
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
              </svg>
              {heroLocation}
            </div>
          )}
        </div>
      </div>

      <!-- Descripci칩n Compacta -->
      {heroDescription && (
        <p class="text-white/80 max-w-2xl mx-auto leading-relaxed" data-animate="fadeInUp" data-animate-delay="200" style="font-size: clamp(1rem, 2.5vw, 1.25rem);">
          {heroDescription}
        </p>
      )}



      <!-- Skills Din치micos y Compactos -->
      {skills.length > 0 && (
        <div class="flex flex-wrap justify-center gap-2 mb-8 max-w-3xl mx-auto" data-animate="stagger">
          {skills.slice(0, 6).map((skill: string) => (
            <span class="px-3 py-1 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full text-white/90 text-sm font-medium hover:bg-white/20 transition-all duration-300 hover:scale-105">
              {skill}
            </span>
          ))}
          {skills.length > 6 && (
            <span class="px-3 py-1 bg-white/5 backdrop-blur-sm border border-white/10 rounded-full text-white/70 text-sm">
              +{skills.length - 6} m치s
            </span>
          )}
        </div>
      )}

      <!-- CTAs Din치micos con espaciado optimizado -->
      <div class="flex flex-col sm:flex-row gap-4 justify-center items-center mb-20 sm:mb-24" data-animate="fadeInUp" data-animate-delay="400">
        <!-- CTA Principal Din치mico -->
        <button 
          onclick="handlePrimaryCTA('contact')"
          class={`group inline-flex items-center px-8 py-4 font-bold text-lg rounded-xl shadow-2xl transform hover:-translate-y-1 transition-all duration-300 hover:scale-105 ${
            isAvailable 
              ? 'bg-gradient-to-r from-green-500 to-emerald-600 text-white hover:shadow-green-500/25 animate-pulse-slow' 
              : 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white hover:shadow-blue-500/25'
          }`}
        >
          <span class="mr-3">{primaryCTA.text}</span>
          <svg class="w-6 h-6 group-hover:translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
            {isAvailable ? (
              <path d="M10 2L3 7v11a1 1 0 001 1h3v-6h6v6h3a1 1 0 001-1V7l-7-5z"></path>
            ) : (
              <path d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 7h12v9a1 1 0 01-1 1H5a1 1 0 01-1-1V7z"></path>
            )}
          </svg>
        </button>

        <!-- CTA Secundario -->
        <button 
          onclick="handleSecondaryCTA('download-cv')"
          class="group inline-flex items-center px-8 py-4 bg-white/10 backdrop-blur-sm border-2 border-white/20 text-white font-semibold text-lg rounded-xl hover:bg-white/20 hover:border-white/40 transform hover:-translate-y-1 transition-all duration-300 hover:scale-105 hover:shadow-xl"
        >
          <span class="mr-3">{secondaryCTA.text}</span>
          <svg class="w-6 h-6 group-hover:translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
            <path d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"></path>
          </svg>
        </button>

        <!-- CTA de Contacto R치pido -->
        {(heroEmail || heroPhone) && (
          <div class="flex gap-3">
            {heroEmail && (
              <a 
                href={`mailto:${heroEmail}`}
                class="group p-4 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full text-white hover:bg-white/20 transition-all duration-300 hover:scale-110 hover:shadow-lg"
                title={`Enviar email a ${heroEmail}`}
              >
                <svg class="w-6 h-6 group-hover:scale-110 transition-transform" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
                  <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
                </svg>
              </a>
            )}
            
            {heroPhone && (
              <a 
                href={`tel:${heroPhone}`}
                class="group p-4 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full text-white hover:bg-white/20 transition-all duration-300 hover:scale-110 hover:shadow-lg"
                title={`Llamar a ${heroPhone}`}
              >
                <svg class="w-6 h-6 group-hover:scale-110 transition-transform" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
                </svg>
              </a>
            )}
          </div>
        )}
      </div>

      <!-- Espaciador m칤nimo -->
      <div class="h-4 sm:h-6"></div>

    </div>

  </div>
  
  <!-- Scroll indicator completamente separado en su propia 치rea -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 text-white/60 hover:text-white/90 transition-all duration-300 cursor-pointer group z-30" onclick="document.getElementById('about').scrollIntoView({behavior: 'smooth'})">
    <div class="flex flex-col items-center animate-pulse-soft group-hover:scale-105 transition-transform duration-300">
      <span class="text-xs font-medium group-hover:text-white transition-colors mb-1">Explora m치s</span>
      <div class="w-3 h-5 border border-white/50 rounded-full flex justify-center group-hover:border-white/70 transition-all duration-300">
        <div class="w-0.5 h-1 bg-white/70 rounded-full mt-1 animate-bounce group-hover:bg-white transition-colors"></div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ 
  heroData: {
    isAvailable,
    primaryCTA,
    secondaryCTA,
    heroEmail: heroEmail || "",
    heroPhone: heroPhone || "",
    profile: profile
  }
}}>
  // Manejar CTA principal din치mico
  function handlePrimaryCTA(action) {
    console.log('游꿢 Primary CTA clicked:', action);
    
    switch(action) {
      case 'contact':
        // Scroll al formulario de contacto o abrir modal
        const contactSection = document.getElementById('contact');
        if (contactSection) {
          contactSection.scrollIntoView({ behavior: 'smooth' });
        }
        showHeroNotification('游닎 춰Hablemos! Desplaz치ndote al formulario de contacto...', 'success');
        break;
        
      case 'schedule':
        // Abrir calendly o sistema de agendamiento
        showHeroNotification('游늰 Abriendo sistema de agendamiento...', 'info');
        // Aqu칤 integrar칤as con Calendly, Cal.com, etc.
        break;
        
      default:
        console.warn('Unknown primary CTA action:', action);
    }
  }

  // Manejar CTA secundario
  async function handleSecondaryCTA(action) {
    console.log('游늯 Secondary CTA clicked:', action);
    
    switch(action) {
      case 'download-cv':
        // Descargar CV usando sistema h칤brido
        try {
          // Importar din치micamente el CVApiService
          const { default: CVApiService } = await import('../lib/cv-api.js');
          const cvService = new CVApiService();
          
          // Obtener CV actual
          const currentCV = await cvService.getCurrentCV('es');
          
          if (currentCV?.file_url) {
            const link = document.createElement('a');
            link.href = currentCV.file_url;
            link.download = `${currentCV.title || 'CV'}.pdf`;
            link.target = '_blank';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            // Intentar incrementar contador
            try {
              await cvService.downloadCV(currentCV.id);
            } catch (e) {
              console.warn('No se pudo incrementar contador:', e.message);
            }
            
            showHeroNotification(`游늯 춰Descargando ${currentCV.title}! Verifica tu carpeta de descargas.`, 'success');
          } else {
            throw new Error('CV no disponible');
          }
        } catch (error) {
          console.error('Error downloading CV:', error);
          // Fallback: scroll a la secci칩n de CV
          const cvSection = document.getElementById('cv');
          if (cvSection) {
            cvSection.scrollIntoView({ behavior: 'smooth' });
            showHeroNotification('游늯 Redirigiendo a la secci칩n de CV...', 'info');
          } else {
            showHeroNotification('游늯 CV no disponible en este momento', 'error');
          }
        }
        break;
        
      default:
        console.warn('Unknown secondary CTA action:', action);
    }
  }

  // Mostrar notificaciones del hero
  function showHeroNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full ${
      type === 'success' ? 'bg-green-500 text-white' :
      type === 'error' ? 'bg-red-500 text-white' :
      'bg-blue-500 text-white'
    }`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // Animaci칩n de entrada
    setTimeout(() => {
      notification.classList.remove('translate-x-full');
    }, 100);
    
    // Remover despu칠s de 3 segundos
    setTimeout(() => {
      notification.classList.add('translate-x-full');
      setTimeout(() => {
        if (document.body.contains(notification)) {
          document.body.removeChild(notification);
        }
      }, 300);
    }, 3000);
  }

  // Typing animation para el subtitle
  function initTypingAnimation() {
    const typingElement = document.getElementById('typing-text');
    if (!typingElement) return;
    
    const text = typingElement.textContent || '';
    typingElement.textContent = '';
    
    let i = 0;
    function typeWriter() {
      if (i < text.length && typingElement) {
        typingElement.textContent += text.charAt(i);
        i++;
        setTimeout(typeWriter, 100);
      }
    }
    
    // Comenzar despu칠s de un peque침o delay
    setTimeout(typeWriter, 500);
  }

  // Inicializar animaciones cuando el DOM est칠 listo
  document.addEventListener('DOMContentLoaded', () => {
    initTypingAnimation();
    
    // Log de disponibilidad
    console.log('游녦 Hero loaded - Available:', heroData.isAvailable);
  });

  // Smooth scroll mejorado para enlaces internos
  document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const href = this.getAttribute('href');
      if (href) {
        const target = document.querySelector(href);
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      }
    });
  });

  // Exponer funciones globalmente para los botones
  window.handlePrimaryCTA = handlePrimaryCTA;
  window.handleSecondaryCTA = handleSecondaryCTA;
</script>

<!-- Script adicional para asegurar que las funciones est칠n disponibles -->
<script is:inline>
  // Verificar que las funciones est칠n disponibles
  document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded, checking functions...');
    console.log('handlePrimaryCTA available:', typeof window.handlePrimaryCTA);
    console.log('handleSecondaryCTA available:', typeof window.handleSecondaryCTA);
  });
</script>

<style>
  @keyframes blob {
    0% {
      transform: translate(0px, 0px) scale(1);
    }
    33% {
      transform: translate(30px, -50px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
    100% {
      transform: translate(0px, 0px) scale(1);
    }
  }

  @keyframes gradient-x {
    0%, 100% {
      background-size: 200% 200%;
      background-position: left center;
    }
    50% {
      background-size: 200% 200%;
      background-position: right center;
    }
  }

  @keyframes pulse-slow {
    0%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.05);
      opacity: 0.8;
    }
  }

  @keyframes spin-slow {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes spin-reverse {
    0% {
      transform: rotate(360deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }

  @keyframes blink {
    0%, 50% {
      border-color: transparent;
    }
    51%, 100% {
      border-color: currentColor;
    }
  }

  .animate-blob {
    animation: blob 7s infinite;
  }

  .animate-gradient-x {
    animation: gradient-x 3s ease infinite;
  }

  .animate-pulse-slow {
    animation: pulse-slow 3s ease-in-out infinite;
  }

  .animate-spin-slow {
    animation: spin-slow 3s linear infinite;
  }

  .animate-spin-reverse {
    animation: spin-reverse 4s linear infinite;
  }

  .animate-blink {
    animation: blink 1s infinite;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-4000 {
    animation-delay: 4s;
  }
  
  .grid-pattern {
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }

  /* Mejoras para hover states */
  .group:hover .group-hover\:shadow-3xl {
    box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25);
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .animate-blob {
      display: none;
    }
  }

  /* Custom gradients para CTAs */
  .bg-gradient-cta-primary {
    background: linear-gradient(135deg, #10b981, #059669, #047857);
  }

  .bg-gradient-cta-secondary {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8, #1e40af);
  }

  /* Smooth scrolling para todo el documento */
  html {
    scroll-behavior: smooth;
  }

  /* Mejoras de accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .animate-blob,
    .animate-gradient-x,
    .animate-pulse-slow,
    .animate-spin-slow,
    .animate-spin-reverse,
    .animate-blink {
      animation: none;
    }
  }

  /* Efectos de particles para disponibilidad */
  .availability-glow {
    position: relative;
  }

  .availability-glow::before {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: inherit;
    background: linear-gradient(45deg, transparent, rgba(34, 197, 94, 0.3), transparent);
    animation: pulse-slow 2s ease-in-out infinite;
    z-index: -1;
  }
</style>
