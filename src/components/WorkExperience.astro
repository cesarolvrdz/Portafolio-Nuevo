---
import { getWorkExperience } from '../lib/cms-api.js';

// Obtener datos din√°micos del CMS
let workExperience: any[] = [];

try {
  workExperience = await getWorkExperience();
} catch (error) {
  console.error('Error loading work experience data:', error);
  workExperience = [];
}

// Solo renderizar si hay datos de experiencia laboral
if (workExperience.length === 0) {
  return null;
}
---

<section id="experience" class="py-20 bg-gradient-to-br from-gray-50 to-blue-50">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16">
      <div class="inline-flex items-center px-4 py-2 bg-gray-100 text-gray-800 rounded-full text-sm font-medium mb-4">
        Experiencia Profesional
      </div>
      <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
        üíº Mi <span class="text-transparent bg-clip-text bg-gradient-to-r from-gray-700 to-blue-600">Trayectoria</span>
      </h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        Un recorrido profesional enfocado en la excelencia t√©cnica, innovaci√≥n y crecimiento continuo a trav√©s de proyectos desafiantes
      </p>
    </div>

    <!-- Timeline de Experiencia Laboral -->
    <div class="relative">
      <!-- L√≠nea central del timeline -->
      <div class="absolute left-1/2 transform -translate-x-1/2 w-1 bg-gradient-to-b from-gray-400 to-blue-600 h-full hidden md:block"></div>

      {workExperience.map((work, index) => (
        <div class={`flex flex-col md:flex-row items-center mb-16 ${index % 2 === 0 ? 'md:flex-row-reverse' : ''}`}>
          <!-- Contenido principal -->
          <div class={`w-full md:w-5/12 ${index % 2 === 0 ? 'md:ml-8' : 'md:mr-8'}`}>
            <div class="bg-white rounded-2xl shadow-xl p-6 hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 group border border-gray-100">
              <!-- Header con logo y empresa -->
              <div class="flex items-start justify-between mb-6">
                <div class="flex items-center">
                  <div class="w-20 h-20 rounded-full overflow-hidden bg-gray-100 flex items-center justify-center mr-4 group-hover:scale-110 transition-transform duration-300 border-2 border-gray-200">
                    <img 
                      src={work.company_logo}
                      alt={`Logo ${work.company}`}
                      class="w-full h-full object-cover"
                      loading="lazy"
                    />
                  </div>
                  <div>
                    <h3 class="text-xl font-bold text-gray-900 group-hover:text-blue-600 transition-colors mb-1">
                      {work.position}
                    </h3>
                    <p class="text-blue-600 font-semibold text-lg">{work.company}</p>
                    <p class="text-gray-500 text-sm">{work.department}</p>
                  </div>
                </div>
                
                <!-- Badge de estado -->
                <div class="flex flex-col items-end">
                  <span class={`px-3 py-1 rounded-full text-xs font-semibold mb-2 ${
                    work.current ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'
                  }`}>
                    {work.current ? 'Actual' : 'Completado'}
                  </span>
                  <span class="text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded">
                    {work.employment_type}
                  </span>
                </div>
              </div>

              <!-- Informaci√≥n de duraci√≥n y ubicaci√≥n -->
              <div class="mb-4">
                <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600 mb-3">
                  <span class="flex items-center">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 7h12v9a1 1 0 01-1 1H5a1 1 0 01-1-1V7z"></path>
                    </svg>
                    {new Date(work.start_date).toLocaleDateString('es-ES', {month: 'short', year: 'numeric'})} - 
                    {work.end_date ? new Date(work.end_date).toLocaleDateString('es-ES', {month: 'short', year: 'numeric'}) : 'Presente'}
                  </span>
                  <span class="flex items-center">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                    </svg>
                    {work.location} ‚Ä¢ {work.location_type}
                  </span>
                  {work.team_size && (
                    <span class="flex items-center">
                      <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"></path>
                      </svg>
                      Equipo de {work.team_size} personas
                    </span>
                  )}
                </div>
                
                <!-- Duraci√≥n calculada -->
                <div class="text-sm text-gray-500">
                  <span class="font-medium">
                    Duraci√≥n: {(() => {
                      const start = new Date(work.start_date);
                      const end = work.end_date ? new Date(work.end_date) : new Date();
                      const diffTime = Math.abs(end.getTime() - start.getTime());
                      const diffMonths = Math.ceil(diffTime / (1000 * 60 * 60 * 24 * 30));
                      const years = Math.floor(diffMonths / 12);
                      const months = diffMonths % 12;
                      return years > 0 ? `${years} a√±o${years > 1 ? 's' : ''} ${months > 0 ? `${months} mes${months > 1 ? 'es' : ''}` : ''}` : `${months} mes${months > 1 ? 'es' : ''}`;
                    })()}
                  </span>
                </div>
              </div>

              <!-- Descripci√≥n -->
              <p class="text-gray-700 mb-6 leading-relaxed">
                {work.description}
              </p>

              <!-- Logros destacados -->
              {work.achievements && work.achievements.length > 0 && (
                <div class="mb-6">
                  <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                    <span class="mr-2">üèÜ</span>
                    Logros Principales
                  </h4>
                  <ul class="space-y-2">
                    {work.achievements.slice(0, 3).map((achievement: string) => (
                      <li class="flex items-start text-sm text-gray-700">
                        <span class="w-2 h-2 bg-blue-500 rounded-full mr-3 mt-2 flex-shrink-0"></span>
                        <span>{achievement}</span>
                      </li>
                    ))}
                  </ul>
                  {work.achievements.length > 3 && (
                    <button 
                      onclick={`showWorkDetails(${work.id})`}
                      class="text-blue-600 hover:text-blue-700 text-sm font-medium mt-2"
                    >
                      Ver todos los logros ({work.achievements.length})
                    </button>
                  )}
                </div>
              )}

              <!-- Tecnolog√≠as utilizadas -->
              {work.technologies && work.technologies.length > 0 && (
                <div class="mb-6">
                  <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                    <span class="mr-2">‚ö°</span>
                    Stack Tecnol√≥gico
                  </h4>
                  <div class="flex flex-wrap gap-2">
                    {work.technologies.slice(0, 6).map((tech: string) => (
                      <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-xs font-medium border border-gray-200 hover:bg-blue-100 hover:text-blue-700 transition-colors">
                        {tech}
                      </span>
                    ))}
                    {work.technologies.length > 6 && (
                      <span class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-xs font-medium">
                        +{work.technologies.length - 6} m√°s
                      </span>
                    )}
                  </div>
                </div>
              )}

              <!-- Proyectos destacados -->
              {work.projects && work.projects.length > 0 && (
                <div class="mb-6">
                  <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                    <span class="mr-2">üöÄ</span>
                    Proyectos Destacados
                  </h4>
                  <div class="space-y-2">
                    {work.projects.slice(0, 2).map((project: any) => (
                      <div class="p-3 bg-gray-50 rounded-lg border border-gray-200">
                        <div class="flex items-center justify-between">
                          <h5 class="font-medium text-gray-900">{project.name}</h5>
                          {project.url && (
                            <a 
                              href={project.url} 
                              target="_blank" 
                              rel="noopener noreferrer"
                              class="text-blue-600 hover:text-blue-700 text-sm"
                            >
                              Ver ‚Üí
                            </a>
                          )}
                        </div>
                        <p class="text-sm text-gray-600 mt-1">{project.description}</p>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              <!-- Botones de acci√≥n -->
              <div class="flex gap-3">
                <button 
                  onclick={`showWorkDetails(${work.id})`}
                  class="flex-1 px-4 py-2 bg-gradient-to-r from-gray-600 to-blue-600 text-white font-semibold rounded-lg hover:from-gray-700 hover:to-blue-700 transition-all duration-300 transform hover:scale-105"
                >
                  Ver Detalles Completos
                </button>
                {work.company_website && (
                  <a 
                    href={work.company_website}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="px-4 py-2 border-2 border-blue-600 text-blue-600 font-semibold rounded-lg hover:bg-blue-600 hover:text-white transition-all duration-300"
                  >
                    <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"></path>
                      <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"></path>
                    </svg>
                  </a>
                )}
              </div>
            </div>
          </div>

          <!-- Punto del timeline (solo visible en desktop) -->
          <div class={`hidden md:flex w-8 h-8 rounded-full border-4 border-white shadow-lg items-center justify-center z-10 ${
            work.current ? 'bg-gradient-to-r from-green-400 to-green-600' : 'bg-gradient-to-r from-gray-500 to-blue-600'
          }`}>
            <div class="w-3 h-3 bg-white rounded-full"></div>
          </div>

          <!-- Fecha (solo visible en desktop) -->
          <div class={`hidden md:block w-5/12 ${index % 2 === 0 ? 'text-right md:mr-8' : 'md:ml-8'}`}>
            <div class={`inline-block text-white px-4 py-3 rounded-lg font-semibold shadow-lg ${
              work.current ? 'bg-gradient-to-r from-green-500 to-green-600' : 'bg-gradient-to-r from-gray-500 to-blue-600'
            }`}>
              <div class="text-sm">
                {new Date(work.start_date).toLocaleDateString('es-ES', {month: 'short', year: 'numeric'})}
              </div>
              <div class="text-xs opacity-90">
                {work.end_date ? new Date(work.end_date).toLocaleDateString('es-ES', {month: 'short', year: 'numeric'}) : 'Presente'}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- Estad√≠sticas de experiencia -->
    <div class="mt-16 grid grid-cols-1 md:grid-cols-4 gap-6">
      <div class="bg-white rounded-xl shadow-lg p-6 text-center">
        <div class="text-3xl font-bold text-blue-600 mb-2">
          {(() => {
            const totalMonths = workExperience.reduce((total, work) => {
              const start = new Date(work.start_date);
              const end = work.end_date ? new Date(work.end_date) : new Date();
              const diffTime = Math.abs(end.getTime() - start.getTime());
              return total + Math.ceil(diffTime / (1000 * 60 * 60 * 24 * 30));
            }, 0);
            return Math.floor(totalMonths / 12);
          })()}+
        </div>
        <div class="text-gray-600">A√±os de Experiencia</div>
      </div>
      <div class="bg-white rounded-xl shadow-lg p-6 text-center">
        <div class="text-3xl font-bold text-green-600 mb-2">{workExperience.length}</div>
        <div class="text-gray-600">Empresas</div>
      </div>
      <div class="bg-white rounded-xl shadow-lg p-6 text-center">
        <div class="text-3xl font-bold text-purple-600 mb-2">
          {workExperience.reduce((total, work) => total + (work.projects?.length || 0), 0)}
        </div>
        <div class="text-gray-600">Proyectos Destacados</div>
      </div>
      <div class="bg-white rounded-xl shadow-lg p-6 text-center">
        <div class="text-3xl font-bold text-orange-600 mb-2">
          {[...new Set(workExperience.flatMap(work => work.technologies || []))].length}
        </div>
        <div class="text-gray-600">Tecnolog√≠as</div>
      </div>
    </div>
  </div>

  <!-- Modal de Detalles de Trabajo -->
  <div id="work-detail-modal" class="fixed inset-0 z-50 hidden">
    <div class="absolute inset-0 bg-black/75 backdrop-blur-sm" onclick="closeWorkDetail()"></div>
    <div class="relative flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-2xl shadow-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden">
        <!-- Header del Modal -->
        <div class="flex items-center justify-between p-6 border-b border-gray-200 bg-gradient-to-r from-gray-50 to-blue-50">
          <div class="flex items-center">
            <img id="modal-work-logo" class="w-20 h-20 rounded-full object-cover mr-4 border-2 border-gray-200" />
            <div>
              <h3 id="modal-work-position" class="text-2xl font-bold text-gray-900"></h3>
              <p id="modal-work-company" class="text-blue-600 font-semibold text-lg"></p>
              <p id="modal-work-department" class="text-gray-500"></p>
            </div>
          </div>
          <button onclick="closeWorkDetail()" class="text-gray-400 hover:text-gray-600 transition-colors">
            <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
              <path d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"></path>
            </svg>
          </button>
        </div>
        
        <!-- Contenido del Modal -->
        <div class="p-6 max-h-[70vh] overflow-auto">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Columna izquierda: Informaci√≥n general -->
            <div>
              <!-- Informaci√≥n de la empresa -->
              <div class="mb-6">
                <h4 class="text-lg font-semibold text-gray-900 mb-3">üè¢ Sobre la Empresa</h4>
                <p id="modal-work-company-desc" class="text-gray-600 mb-3"></p>
                <div class="flex items-center gap-4 text-sm text-gray-600">
                  <span id="modal-work-dates" class="flex items-center">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 7h12v9a1 1 0 01-1 1H5a1 1 0 01-1-1V7z"></path>
                    </svg>
                  </span>
                  <span id="modal-work-location" class="flex items-center">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                    </svg>
                  </span>
                  <span id="modal-work-team" class="flex items-center">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"></path>
                    </svg>
                  </span>
                </div>
              </div>

              <!-- Descripci√≥n del rol -->
              <div class="mb-6">
                <h4 class="text-lg font-semibold text-gray-900 mb-3">üìã Descripci√≥n del Puesto</h4>
                <p id="modal-work-description" class="text-gray-600"></p>
              </div>

              <!-- Responsabilidades -->
              <div class="mb-6">
                <h4 class="text-lg font-semibold text-gray-900 mb-3">‚úÖ Responsabilidades Principales</h4>
                <ul id="modal-work-responsibilities" class="space-y-2">
                  <!-- Responsabilidades generadas din√°micamente -->
                </ul>
              </div>
            </div>

            <!-- Columna derecha: Logros y proyectos -->
            <div>
              <!-- Logros completos -->
              <div class="mb-6">
                <h4 class="text-lg font-semibold text-gray-900 mb-3">üèÜ Todos los Logros</h4>
                <ul id="modal-work-achievements" class="space-y-2">
                  <!-- Logros generados din√°micamente -->
                </ul>
              </div>

              <!-- Tecnolog√≠as -->
              <div class="mb-6">
                <h4 class="text-lg font-semibold text-gray-900 mb-3">‚ö° Stack Tecnol√≥gico Completo</h4>
                <div id="modal-work-technologies" class="grid grid-cols-2 gap-2">
                  <!-- Tecnolog√≠as generadas din√°micamente -->
                </div>
              </div>

              <!-- Proyectos -->
              <div class="mb-6">
                <h4 class="text-lg font-semibold text-gray-900 mb-3">üöÄ Todos los Proyectos</h4>
                <div id="modal-work-projects" class="space-y-3">
                  <!-- Proyectos generados din√°micamente -->
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ workData: workExperience }}>
  // Mostrar detalles de trabajo en modal
  function showWorkDetails(workId) {
    const work = workData.find(w => w.id === workId);
    if (!work) return;

    const modal = document.getElementById('work-detail-modal');
    
    // Llenar informaci√≥n b√°sica
    document.getElementById('modal-work-logo').src = work.company_logo;
    document.getElementById('modal-work-position').textContent = work.position;
    document.getElementById('modal-work-company').textContent = work.company;
    document.getElementById('modal-work-department').textContent = work.department;
    document.getElementById('modal-work-company-desc').textContent = work.company_description;
    document.getElementById('modal-work-description').textContent = work.description;
    
    // Fechas, ubicaci√≥n y equipo
    const startDate = new Date(work.start_date).toLocaleDateString('es-ES', {month: 'long', year: 'numeric'});
    const endDate = work.end_date ? new Date(work.end_date).toLocaleDateString('es-ES', {month: 'long', year: 'numeric'}) : 'Presente';
    
    document.getElementById('modal-work-dates').innerHTML = `
      <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
        <path d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 7h12v9a1 1 0 01-1 1H5a1 1 0 01-1-1V7z"></path>
      </svg>
      ${startDate} - ${endDate}
    `;
    
    document.getElementById('modal-work-location').innerHTML = `
      <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
      </svg>
      ${work.location} ‚Ä¢ ${work.location_type}
    `;
    
    document.getElementById('modal-work-team').innerHTML = `
      <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
        <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"></path>
      </svg>
      Equipo de ${work.team_size} personas
    `;
    
    // Responsabilidades
    const responsibilitiesContainer = document.getElementById('modal-work-responsibilities');
    responsibilitiesContainer.innerHTML = '';
    if (work.responsibilities && work.responsibilities.length > 0) {
      work.responsibilities.forEach(responsibility => {
        const li = document.createElement('li');
        li.className = 'flex items-start text-gray-700';
        li.innerHTML = `
          <span class="w-2 h-2 bg-blue-500 rounded-full mr-3 mt-2 flex-shrink-0"></span>
          <span>${responsibility}</span>
        `;
        responsibilitiesContainer.appendChild(li);
      });
    }
    
    // Logros
    const achievementsContainer = document.getElementById('modal-work-achievements');
    achievementsContainer.innerHTML = '';
    if (work.achievements && work.achievements.length > 0) {
      work.achievements.forEach(achievement => {
        const li = document.createElement('li');
        li.className = 'flex items-start text-gray-700';
        li.innerHTML = `
          <span class="w-2 h-2 bg-green-500 rounded-full mr-3 mt-2 flex-shrink-0"></span>
          <span>${achievement}</span>
        `;
        achievementsContainer.appendChild(li);
      });
    }
    
    // Tecnolog√≠as
    const technologiesContainer = document.getElementById('modal-work-technologies');
    technologiesContainer.innerHTML = '';
    if (work.technologies && work.technologies.length > 0) {
      work.technologies.forEach(tech => {
        const div = document.createElement('div');
        div.className = 'p-2 bg-gray-100 rounded-lg border border-gray-200 text-center';
        div.innerHTML = `
          <span class="text-gray-700 font-medium text-sm">${tech}</span>
        `;
        technologiesContainer.appendChild(div);
      });
    }
    
    // Proyectos
    const projectsContainer = document.getElementById('modal-work-projects');
    projectsContainer.innerHTML = '';
    if (work.projects && work.projects.length > 0) {
      work.projects.forEach(project => {
        const div = document.createElement('div');
        div.className = 'p-4 bg-gray-50 rounded-lg border border-gray-200';
        div.innerHTML = `
          <div class="flex items-center justify-between mb-2">
            <h5 class="font-medium text-gray-900">${project.name}</h5>
            ${project.url ? `
              <a href="${project.url}" target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:text-blue-700 text-sm font-medium">
                Ver Proyecto ‚Üí
              </a>
            ` : ''}
          </div>
          <p class="text-sm text-gray-600">${project.description}</p>
        `;
        projectsContainer.appendChild(div);
      });
    }
    
    // Mostrar modal
    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  }

  // Cerrar modal de trabajo
  function closeWorkDetail() {
    const modal = document.getElementById('work-detail-modal');
    modal.classList.add('hidden');
    document.body.style.overflow = 'auto';
  }

  // Cerrar modal con Escape
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      closeWorkDetail();
    }
  });

  // Exponer funciones globalmente
  window.showWorkDetails = showWorkDetails;
  window.closeWorkDetail = closeWorkDetail;

  // Inicializar
  document.addEventListener('DOMContentLoaded', () => {
    console.log('üíº Work experience section loaded');
  });
</script>

<style>
  /* Animaciones para el timeline */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .timeline-item {
    animation: fadeInUp 0.6s ease-out forwards;
  }

  /* Efectos hover mejorados */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }

  /* Timeline responsive */
  @media (max-width: 768px) {
    .timeline-item {
      margin-left: 0;
      padding-left: 1rem;
    }
  }

  /* Estados de trabajo actual */
  .current-job {
    border-left: 4px solid #10b981;
  }

  /* Mejoras de accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .timeline-item {
      animation: none;
    }
    
    .group:hover .group-hover\:scale-110 {
      transform: none;
    }
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Custom scrollbar para modal */
  .modal-content::-webkit-scrollbar {
    width: 8px;
  }

  .modal-content::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 4px;
  }

  .modal-content::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 4px;
  }

  .modal-content::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
</style>