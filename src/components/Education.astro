---
import { getEducation, getWorkExperience } from '../lib/cms-api.js';

// Obtener datos dinámicos del CMS
let education: any[] = [];
let workExperience: any[] = [];

try {
  [education, workExperience] = await Promise.all([
    getEducation(),
    getWorkExperience()
  ]);
} catch (error) {
  console.error('Error loading education data:', error);
  education = [];
  workExperience = [];
}

// Solo renderizar si hay datos de educación
if (education.length === 0) {
  return null;
}
---

<section id="education" class="py-20 bg-gradient-to-br from-blue-50 to-indigo-100">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16">
      <div class="inline-flex items-center px-4 py-2 bg-blue-100 text-blue-800 rounded-full text-sm font-medium mb-4">
        <span class="w-2 h-2 bg-blue-600 rounded-full mr-2"></span>
        Formación Académica
      </div>
      <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
        🎓 Mi <span class="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-indigo-600">Educación</span>
      </h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        Un viaje continuo de aprendizaje y crecimiento profesional a través de educación formal, certificaciones y capacitación especializada
      </p>
    </div>

    <!-- Timeline de Educación -->
    {education.length > 0 ? (
      <div class="relative">
        <!-- Línea central del timeline -->
        <div class="absolute left-1/2 transform -translate-x-1/2 w-1 bg-gradient-to-b from-blue-400 to-indigo-600 h-full hidden md:block"></div>

        {education.map((edu, index) => (
          <div class={`flex flex-col md:flex-row items-center mb-12 ${index % 2 === 0 ? 'md:flex-row-reverse' : ''}`}>
            <!-- Contenido -->
            <div class={`w-full md:w-5/12 ${index % 2 === 0 ? 'md:ml-8' : 'md:mr-8'}`}>
              <div class="bg-white rounded-2xl shadow-xl p-6 hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 group">
                <!-- Header con logo y fechas -->
                <div class="flex items-start justify-between mb-4">
                  <div class="flex items-center">
                    {edu.logo_url && (
                      <div class="w-16 h-16 rounded-full overflow-hidden bg-gray-100 flex items-center justify-center mr-4 group-hover:scale-110 transition-transform duration-300">
                        <img 
                          src={edu.logo_url}
                          alt={`Logo ${edu.institution}`}
                          class="w-full h-full object-cover"
                          loading="lazy"
                        />
                      </div>
                    )}
                    <div>
                      <h3 class="text-xl font-bold text-gray-900 group-hover:text-blue-600 transition-colors">
                        {edu.degree}
                      </h3>
                      <p class="text-blue-600 font-semibold">{edu.institution}</p>
                    </div>
                  </div>
                </div>

                <!-- Información académica -->
                <div class="mb-4">
                  {edu.field_of_study && (
                    <p class="text-gray-600 font-medium mb-1">{edu.field_of_study}</p>
                  )}
                  <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500 mb-3">
                    {edu.start_date && edu.end_date && (
                      <span class="flex items-center">
                        <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 7h12v9a1 1 0 01-1 1H5a1 1 0 01-1-1V7z"></path>
                        </svg>
                        {new Date(edu.start_date).getFullYear()} - {new Date(edu.end_date).getFullYear()}
                      </span>
                    )}
                    {edu.location && (
                      <span class="flex items-center">
                        <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                        </svg>
                        {edu.location}
                      </span>
                    )}
                    {edu.grade && (
                      <span class="flex items-center">
                        <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                        </svg>
                        {edu.grade}
                      </span>
                    )}
                  </div>
                </div>

                <!-- Descripción -->
                {edu.description && (
                  <p class="text-gray-700 mb-4 leading-relaxed">
                    {edu.description}
                  </p>
                )}

                <!-- Logros destacados -->
                {edu.achievements && edu.achievements.length > 0 && (
                  <div class="mb-4">
                    <h4 class="font-semibold text-gray-900 mb-2 flex items-center">
                      <span class="mr-2">🏆</span>
                      Logros Destacados
                    </h4>
                    <ul class="space-y-1">
                      {edu.achievements.slice(0, 3).map((achievement: string) => (
                        <li class="flex items-center text-sm text-gray-700">
                          <span class="w-2 h-2 bg-blue-500 rounded-full mr-3"></span>
                          {achievement}
                        </li>
                      ))}
                    </ul>
                    {edu.achievements.length > 3 && (
                      <span class="text-blue-600 text-sm font-medium mt-2">
                        +{edu.achievements.length - 3} logros más
                      </span>
                    )}
                  </div>
                )}

                <!-- Cursos principales -->
                {edu.courses && edu.courses.length > 0 && (
                  <div class="mb-4">
                    <h4 class="font-semibold text-gray-900 mb-2 flex items-center">
                      <span class="mr-2">📚</span>
                      Materias Destacadas
                    </h4>
                    <div class="flex flex-wrap gap-2">
                      {edu.courses.slice(0, 3).map((course: string) => (
                        <span class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-xs font-medium">
                          {course}
                        </span>
                      ))}
                      {edu.courses.length > 3 && (
                        <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-xs font-medium">
                          +{edu.courses.length - 3} más
                        </span>
                      )}
                    </div>
                  </div>
                )}
              </div>
            </div>

            <!-- Punto del timeline (solo visible en desktop) -->
            <div class="hidden md:flex w-6 h-6 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-full border-4 border-white shadow-lg items-center justify-center z-10">
              <div class="w-2 h-2 bg-white rounded-full"></div>
            </div>

            <!-- Fecha (solo visible en desktop) -->
            <div class={`hidden md:block w-5/12 ${index % 2 === 0 ? 'text-right md:mr-8' : 'md:ml-8'}`}>
              {edu.start_date && edu.end_date && (
                <div class="inline-block bg-gradient-to-r from-blue-500 to-indigo-600 text-white px-4 py-2 rounded-lg font-semibold shadow-lg">
                  {new Date(edu.start_date).getFullYear()} - {new Date(edu.end_date).getFullYear()}
                </div>
              )}
            </div>
          </div>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <div class="text-6xl mb-4">🎓</div>
        <h3 class="text-2xl font-bold text-gray-900 mb-2">Sin información educativa</h3>
        <p class="text-gray-600">La información educativa se cargará desde el CMS.</p>
      </div>
    )}

    <!-- Estadísticas de educación -->
    {education.length > 0 && (
      <div class="mt-16 grid grid-cols-1 md:grid-cols-3 gap-6">
        <div class="bg-white rounded-xl shadow-lg p-6 text-center">
          <div class="text-3xl font-bold text-blue-600 mb-2">{education.length}</div>
          <div class="text-gray-600">Programas Completados</div>
        </div>
        <div class="bg-white rounded-xl shadow-lg p-6 text-center">
          <div class="text-3xl font-bold text-indigo-600 mb-2">
            {education.reduce((total, edu) => total + (edu.courses?.length || 0), 0)}
          </div>
          <div class="text-gray-600">Materias Cursadas</div>
        </div>
        <div class="bg-white rounded-xl shadow-lg p-6 text-center">
          <div class="text-3xl font-bold text-purple-600 mb-2">
            {education.reduce((total, edu) => total + (edu.achievements?.length || 0), 0)}
          </div>
          <div class="text-gray-600">Logros Obtenidos</div>
        </div>
      </div>
    )}
  </div>
</section>

<style>
  /* Animaciones para el timeline */
  .timeline-item {
    opacity: 0;
    transform: translateY(30px);
    animation: slideInUp 0.6s ease-out forwards;
  }

  @keyframes slideInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Efectos hover mejorados */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }

  /* Timeline responsive */
  @media (max-width: 768px) {
    .timeline-item {
      margin-left: 0;
      padding-left: 2rem;
    }
  }

  /* Mejoras de accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .timeline-item {
      animation: none;
      opacity: 1;
      transform: none;
    }
    
    .group:hover .group-hover\:scale-110 {
      transform: none;
    }
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }
</style>